ajouter 4 boutons "Tous", "Objets", "Appartements", "Hotels & Restaurants" tous alignés sur une seule ligne de la police font-family: 'Syne';
	font-weight: 700;
	font-size: 30px;
	color: #1D6154
document.addEventListener("DOMContentLoaded", async () => {
    const portfolioSection = document.querySelector("#portfolio");
    const gallery = portfolioSection.querySelector(".gallery");

    if (!portfolioSection || !gallery) {
        console.error("❌ Section #portfolio ou galerie introuvable !");
        return;
    }

    const buttonContainer = document.createElement("div");
    buttonContainer.style.display = "flex";
    buttonContainer.style.gap = "15px";
    buttonContainer.style.justifyContent = "center";
    buttonContainer.style.margin = "20px 0";

    try {
        //  1. Récupération des catégories
        const categoriesResponse = await fetch("http://localhost:5678/api/categories");
        const categoriesFromAPI = await categoriesResponse.json();

        //  2. Récupération des projets
        const worksResponse = await fetch("http://localhost:5678/api/works");
        const works = await worksResponse.json();

        // 3. On ajoute "Tous" au début
        const categories = [{ id: 0, name: "Tous" }, ...categoriesFromAPI];

        //  4. Fonction pour afficher les projets
        function displayWorks(filteredWorks) {
            gallery.innerHTML = ""; // on vide la galerie
            filteredWorks.forEach(work => {
                const figure = document.createElement("figure");
                const img = document.createElement("img");
                img.src = work.imageUrl;
                img.alt = work.title;

                const figcaption = document.createElement("figcaption");
                figcaption.innerText = work.title;

                figure.appendChild(img);
                figure.appendChild(figcaption);
                gallery.appendChild(figure);
            });
        }

        // 5. Création des boutons
        categories.forEach(category => {
            const btn = document.createElement("button");
            btn.innerText = category.name;

            // Style
            btn.style.fontFamily = "'Syne', sans-serif";
            btn.style.fontWeight = "700";
            btn.style.fontSize = "30px";
            btn.style.color = "#1D6154";
            btn.style.background = "transparent";
            btn.style.border = "2px solid #1D6154";
            btn.style.borderRadius = "20px";
            btn.style.padding = "5px 15px";
            btn.style.cursor = "pointer";

            btn.addEventListener("click", () => {
                btn.style.background = "#1D6154";
                btn.style.color = "#fff";
            });
            btn.addEventListener("mouseout", () => {
                btn.style.background = "transparent";
                btn.style.color = "#1D6154";
            });

            //  6. Filtrage au clic
            btn.addEventListener("click", () => {
                const filtered = category.id === 0
                    ? works // Tous
                    : works.filter(work => work.categoryId === category.id);

                displayWorks(filtered);
            });

            buttonContainer.appendChild(btn);
        });

        // 7. On met les boutons avant la galerie
        portfolioSection.insertBefore(buttonContainer, gallery);

        // 8. On affiche tous les projets au départ
        displayWorks(works);

    } catch (error) {
        console.error("❌ Erreur lors de la récupération des données :", error);
    }
});

Ce que ça fait :
Récupère les catégories et les projets depuis ton API

Génère automatiquement les boutons de filtre

Affiche la galerie en fonction de la catégorie cliquée

Par défaut, montre tous les projets